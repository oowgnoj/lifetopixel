{"version":3,"sources":["assets/images/day.jpeg","lib/common/index.ts","lib/api/auth.ts","context/authContext.tsx","lib/privateRoute.tsx","views/components/layout/index.tsx","lib/api/day.ts","lib/api/job.ts","lib/api/note.ts","views/index.tsx","views/login.tsx","views/components/atoms/forms/title.tsx","views/components/atoms/forms/inputSentence.tsx","views/components/atoms/forms/inputLongText.tsx","types/question.ts","views/components/molecules/question.tsx","views/components/organisms/record.tsx","lib/common/helper.ts","views/day.tsx","views/job.tsx","views/note.tsx","App.tsx","index.tsx"],"names":["module","exports","console","log","process","DOMAIN_API","getMe","a","token","localStorage","getItem","axios","get","headers","res","data","requestLogin","email","password","post","user","setItem","UserContext","createContext","UserProvider","children","useState","userInfo","setUserInfo","useEffect","handleGetMe","username","Provider","value","values","useUserInfo","useContext","PrivateRoute","props","Boolean","component","to","Wrapper","styled","div","Header","Layout","history","useHistory","onClick","requestLogout","push","requestDay","postDay","body","hasError","error","message","requestJob","postJob","requestNote","postNote","days","setDays","jobs","setJobs","notes","setNotes","note","getData","ButtonImage","src","DayPic","img","setEmail","setPassword","handleRequest","InputWrapper","Title","onChange","e","target","Question","title","ShortSentence","index","handleChange","Input","input","IQuestionType","textarea","type","shortSentence","longSentence","Record","questions","map","el","key","transformToRequstBody","question","field","answer","answers","setAnswer","result","alert","response","text","newAnswer","i","App","exact","path","Index","Login","Day","Note","Job","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81792d1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/day.c535b3e2.jpeg\";","console.log(process.env);\nexport const DOMAIN_API =\n  process.env.REACT_APP_NODE_ENV === \"production\"\n    ? process.env.REACT_APP_PROD_API_URL\n    : process.env.REACT_APP_DEV_API_URL;\n","import axios from \"axios\";\nimport IUser, { IUserResponse } from \"types/user\";\nimport { DOMAIN_API } from \"lib/common\";\n\nexport async function getMe() {\n  const token = localStorage.getItem(\"token\");\n  const res = await axios.get<IUser>(`${DOMAIN_API}/user`, {\n    headers: { \"x-access-token\": token },\n  });\n  return res.data;\n}\n\nexport async function requestLogin(email: string, password: string) {\n  const user = await axios.post<IUserResponse>(`${DOMAIN_API}/login`, {\n    email,\n    password,\n  });\n  if (user) {\n    localStorage.setItem(\"token\", user.data.token);\n    return user.data;\n  } else {\n    return false;\n  }\n}\n\nexport async function requestLogout() {\n  await localStorage.setItem(\"token\", \"\");\n}\n\nexport async function requestRegister(\n  email: string,\n  password: string,\n  username: string\n) {\n  const res = await axios.post(\n    `${DOMAIN_API}/register`,\n    { email, password, username },\n    { withCredentials: true }\n  );\n  if (res.data) {\n    return true;\n  } else {\n    alert(\"회원 정보를 다시 입력해주세요\");\n    return false;\n  }\n}\n","import React, { useState, useEffect, createContext, useContext } from \"react\";\nimport { getMe } from \"lib/api/auth\";\nimport IUser from \"types/user\";\n\ntype userInfo = {\n  username: string;\n  email: string;\n};\nexport const UserContext = createContext({});\nexport const UserProvider = ({ children }: any) => {\n  const [userInfo, setUserInfo] = useState<userInfo | null>(null);\n  useEffect(() => {\n    handleGetMe();\n  }, []);\n\n  const handleGetMe = async () => {\n    const { email, username } = await getMe();\n    setUserInfo({ email, username });\n  };\n  const changeUserInfo = (values: IUser) => {\n    setUserInfo(values);\n  };\n\n  return (\n    <UserContext.Provider\n      value={{ userInfo: userInfo, setUserInfo: changeUserInfo }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport function useUserInfo<IUser>() {\n  return useContext(UserContext);\n}\n","import React from \"react\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\n\nexport interface IPrivateRouteProps extends RouteProps {}\n\nconst PrivateRoute: React.FC<IPrivateRouteProps> = (props) => {\n  const token: string | null = localStorage.getItem(\"token\");\n  const isTokenExist = Boolean(token);\n\n  return isTokenExist ? (\n    <Route {...props} component={props.component} />\n  ) : (\n    <Redirect to={\"/login\"} />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useUserInfo } from \"context/authContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { requestLogout } from \"lib/api/auth\";\n\nconst Layout: React.FunctionComponent = ({ children }) => {\n  const { userInfo, setUserInfo }: any = useUserInfo();\n  const history = useHistory();\n  const handleLogout = () => {\n    setUserInfo(null);\n    requestLogout();\n    history.push(\"/login\");\n  };\n  if (!userInfo) {\n    return <div>...</div>;\n  }\n  return (\n    <Wrapper>\n      <Header>\n        <div>{userInfo.username}</div>\n        <button onClick={handleLogout}>logout</button>\n      </Header>\n      {children}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  padding: 0 20vw;\n`;\nconst Header = styled.div`\n  display: flex;\n  height: 30px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default Layout;\n","import axios from \"axios\";\nimport IDay from \"types/day\";\nimport { DOMAIN_API } from \"lib/common\";\nexport async function requestDay() {\n  const token = localStorage.getItem(\"token\");\n  const res = await axios.get(`${DOMAIN_API}/day`, {\n    headers: { \"x-access-token\": token },\n  });\n  return res.data;\n}\n\nexport async function postDay(body: IDay) {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await axios.post(`${DOMAIN_API}/day`, body, {\n      headers: { \"x-access-token\": token },\n    });\n    if (res.data && res.data.hasError) {\n      return { hasError: true, error: res.data.message };\n    }\n    return res.data;\n  } catch (error) {\n    return { hasError: true, data: error };\n  }\n}\n","import axios from \"axios\";\nimport IJob from \"types/job\";\nimport { DOMAIN_API } from \"lib/common\";\n\nexport async function requestJob() {\n  const token = localStorage.getItem(\"token\");\n  const res = await axios.get(`${DOMAIN_API}/job`, {\n    headers: { \"x-access-token\": token },\n  });\n  return res.data;\n}\n\nexport async function postJob(body: IJob) {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await axios.post(`${DOMAIN_API}/job`, body, {\n      headers: { \"x-access-token\": token },\n    });\n    if (res.data && res.data.hasError) {\n      return { hasError: true, error: res.data.message };\n    }\n    return res.data;\n  } catch (error) {\n    return { hasError: true, data: error };\n  }\n}\n","import axios from \"axios\";\nimport INote from \"types/note\";\nimport { DOMAIN_API } from \"lib/common\";\n\nexport async function requestNote() {\n  const token = localStorage.getItem(\"token\");\n  const res = await axios.get(`${DOMAIN_API}/note`, {\n    headers: { \"x-access-token\": token },\n  });\n  return res.data;\n}\n\nexport async function postNote(body: INote) {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await axios.post(`${DOMAIN_API}/note`, body, {\n      headers: { \"x-access-token\": token },\n    });\n    if (res.data && res.data.hasError) {\n      return { hasError: true, error: res.data.message };\n    }\n    return res.data;\n  } catch (error) {\n    return { hasError: true, data: error };\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport Layout from \"views/components/layout\";\nimport DayPic from \"assets/images/day.jpeg\";\nimport { useUserInfo } from \"context/authContext\";\nimport { requestDay } from \"lib/api/day\";\nimport { requestJob } from \"lib/api/job\";\nimport { requestNote } from \"lib/api/note\";\n\nimport IJob from \"types/job\";\nimport IDay from \"types/day\";\nimport INote from \"types/note\";\n\nexport default (props: any) => {\n  const { userInfo, setUserInfo }: any = useUserInfo();\n\n  const [days, setDays] = useState<IDay[]>([]);\n  const [jobs, setJobs] = useState<IJob[]>([]);\n  const [notes, setNotes] = useState<INote[]>([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    async function getData() {\n      const days = await requestDay();\n      const jobs = await requestJob();\n      const note = await requestNote();\n      setDays(days);\n      setJobs(jobs);\n      setNotes(note);\n    }\n    getData();\n  }, []);\n\n  if (!userInfo && !days && jobs && notes) {\n    return <div>waiting</div>;\n  }\n\n  return (\n    <Layout>\n      <Wrapper>\n        <Link to=\"/day\">\n          <ButtonImage src={DayPic} />\n        </Link>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nconst Wrapper = styled.div``;\nconst ButtonImage = styled.img`\n  width: 100%;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { useUserInfo } from \"context/authContext\";\nimport { requestLogin } from \"../lib/api/auth\";\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setUserInfo }: any = useUserInfo();\n  const history = useHistory();\n  const handleRequest = async () => {\n    const user = await requestLogin(email, password);\n    if (user) {\n      const { email, username } = user.user;\n      await setUserInfo({ email, username });\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Wrapper>\n      <InputWrapper>\n        <Title>Life To Pixel</Title>\n        <span>email</span>\n        <input onChange={(e) => setEmail(e.target.value)} />\n        <span>패스워드</span>\n        <input onChange={(e) => setPassword(e.target.value)} />\n        <button onClick={handleRequest}>확인</button>\n      </InputWrapper>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst InputWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  width: 40vw;\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n`;\n\nconst Title = styled.div`\n  display: flex;\n  align-self: center;\n  font-size: 30px;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport styled from 'styled-components';\ntype QuestionProps = {\n  index: number;\n  title: string;\n};\nconst Question: FunctionComponent<QuestionProps> = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default Question;\n\nconst Title = styled.div`\n  margin: 10px;\n  width: 100%;\n`","import React, { FunctionComponent } from \"react\";\nimport styled from 'styled-components';\n\ntype ShortSentenceProps = {\n  index: number;\n  handleChange: (index: number, text: string) => void;\n};\nconst ShortSentence: FunctionComponent<ShortSentenceProps> = ({\n  index,\n  handleChange,\n}) => {\n  return <Input onChange={(e) => handleChange(index, e.target.value)}></Input>;\n};\n\nexport default ShortSentence;\n\nconst Input = styled.input`\n  width: 100%;\n  outline: 0;\n  border-width: 0 0 2px;\n  border-color: olive;\n`","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\ntype ShortSentenceProps = {\n  index: number;\n  handleChange: (index: number, text: string) => void;\n};\nconst ShortSentence: FunctionComponent<ShortSentenceProps> = ({\n  index,\n  handleChange,\n}) => {\n  return <Input onChange={(e) => handleChange(index, e.target.value)}></Input>;\n};\n\nexport default ShortSentence;\n\nconst Input = styled.textarea`\n  width: 100%;\n  outline: 0;\n  height: 40px;\n  border-width: 0 0 2px;\n  border-color: olive;\n`;\n","export default interface IQuestion {\n  index: number;\n  type: IQuestionType;\n  title: string;\n  field: string;\n  answer: string;\n}\n\nexport enum IQuestionType {\n  shortSentence = \"shortSentence\",\n  score = \"score\",\n  dateTime = \"dateTime\",\n  select = \"select\",\n  multiSelect = \"multiSelect\",\n  longSentence = \"longSentence\",\n}\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"views/components/atoms/forms/title\";\nimport InputSentence from \"views/components/atoms/forms/inputSentence\";\nimport InputLongText from \"views/components/atoms/forms/inputLongText\";\n\nimport { IQuestionType } from \"types/question\";\ntype QuestionProps = {\n  title: string;\n  index: number;\n  type: string;\n  handleChange: (index: number, text: string) => void;\n};\nconst Question: FunctionComponent<QuestionProps> = ({\n  title,\n  index,\n  type,\n  handleChange,\n}) => {\n  return (\n    <Wrapper>\n      <Title index={index} title={title} />\n\n      {type === IQuestionType.shortSentence && (\n        <InputSentence index={index} handleChange={handleChange} />\n      )}\n\n      {type === IQuestionType.longSentence && (\n        <InputLongText index={index} handleChange={handleChange} />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Question;\n\nconst Wrapper = styled.div`\n  padding: 10px 0px;\n  margin: 10px 10px;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport Question from \"views/components/molecules/question\";\n\ntype RecordProps = {\n  type: string;\n  questions: { title: string; type: string; index: number }[];\n  handleChange: (index: number, text: string) => void;\n};\nconst Record: FunctionComponent<RecordProps> = ({\n  type,\n  questions,\n  handleChange,\n}) => {\n  return (\n    <>\n      <div>Records</div>\n      {questions.map((el) => (\n        <Question\n          key={el.index}\n          index={el.index}\n          title={el.title}\n          type={el.type}\n          handleChange={handleChange}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Record;\n","import IQuestion from \"types/question\";\n\nexport function transformToRequstBody(question: IQuestion[]) {\n  let body: any = {};\n  for (let el of question) {\n    body[el.field] = el.answer;\n  }\n  return body;\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Layout from \"views/components/layout\";\nimport Record from \"views/components/organisms/record\";\nimport { postDay } from \"lib/api/day\";\nimport { transformToRequstBody } from \"lib/common/helper\";\nimport IQuestion, { IQuestionType } from \"types/question\";\nimport IDay from \"types/day\";\n\nconst questions: IQuestion[] = [\n  {\n    index: 0,\n    type: IQuestionType.shortSentence,\n    title: \"좋았던 점\",\n    field: \"goodThing\",\n    answer: \"\",\n  },\n  {\n    index: 1,\n    type: IQuestionType.shortSentence,\n    title: \"안좋았던 점\",\n    field: \"badThing\",\n    answer: \"\",\n  },\n  {\n    index: 2,\n    type: IQuestionType.shortSentence,\n    title: \"내일 목표는 무엇인가요?\",\n    field: \"goalTomorrow\",\n    answer: \"\",\n  },\n  {\n    index: 3,\n    type: IQuestionType.shortSentence,\n    title: \"오늘의 주요 활동은?\",\n    field: \"mainActivity\",\n    answer: \"\",\n  },\n  {\n    index: 4,\n    type: IQuestionType.shortSentence,\n    title: \"오늘 점수는? (1~10)\",\n    field: \"score\",\n    answer: \"\",\n  },\n];\n\nexport default () => {\n  const [answers, setAnswer] = useState(questions);\n  const history = useHistory();\n\n  const handleAnswer = (index: number, text: string) => {\n    const newAnswer = questions.map((el, i) => {\n      if (i === index) {\n        el.answer = text;\n      }\n      return el;\n    });\n    setAnswer(newAnswer);\n  };\n  const handleRequest = async () => {\n    const body: IDay = transformToRequstBody(answers);\n    const result = await postDay(body);\n    console.log(result);\n    if (result.hasError) {\n      alert(result.data.response.data);\n    } else {\n      alert(\"성공적으로 제출되었습니다.\");\n      history.push(\"/\");\n    }\n  };\n  return (\n    <Layout>\n      <Wrapper>\n        <Record type=\"day\" questions={questions} handleChange={handleAnswer} />\n        <button\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          뒤로가기\n        </button>\n        <button onClick={handleRequest}>제출</button>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Record from \"views/components/organisms/record\";\nimport { postJob } from \"lib/api/job\";\nimport { transformToRequstBody } from \"lib/common/helper\";\nimport IQuestion, { IQuestionType } from \"types/question\";\nimport IJob from \"types/job\";\n\nconst questions: IQuestion[] = [\n  {\n    index: 0,\n    type: IQuestionType.shortSentence,\n    title: \"어떤 일을 하셨나요?\",\n    field: \"name\",\n    answer: \"\",\n  },\n  {\n    index: 1,\n    type: IQuestionType.shortSentence,\n    title: \"카테고리?\",\n    field: \"category\",\n    answer: \"\",\n  },\n  {\n    index: 2,\n    type: IQuestionType.shortSentence,\n    title: \"type?\",\n    field: \"type\",\n    answer: \"\",\n  },\n  {\n    index: 3,\n    type: IQuestionType.shortSentence,\n    title: \"시작시간?\",\n    field: \"startTime\",\n    answer: \"\",\n  },\n  {\n    index: 3,\n    type: IQuestionType.shortSentence,\n    title: \"끝시간?\",\n    field: \"sendTime\",\n    answer: \"\",\n  },\n];\n\nexport default () => {\n  const [answers, setAnswer] = useState(questions);\n  const history = useHistory();\n  const handleAnswer = (index: number, text: string) => {\n    const newAnswer = questions.map((el, i) => {\n      if (i === index) {\n        el.answer = text;\n      }\n      return el;\n    });\n    setAnswer(newAnswer);\n  };\n  const handleRequest = async () => {\n    const body: IJob = transformToRequstBody(answers);\n    const result = await postJob(body);\n    if (result.hasError) {\n      alert(result.data);\n    } else {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <Wrapper>\n      <Record type=\"job\" questions={questions} handleChange={handleAnswer} />\n      <button onClick={handleRequest}>제출</button>\n      <button\n        onClick={() => {\n          history.push(\"/\");\n        }}\n      >\n        뒤로가기\n      </button>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  position: absolute;\n  width: 50vw;\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Record from \"views/components/organisms/record\";\nimport { transformToRequstBody } from \"lib/common/helper\";\nimport { postNote } from \"lib/api/note\";\nimport IQuestion, { IQuestionType } from \"types/question\";\nimport INote from \"types/note\";\n\nconst questions: IQuestion[] = [\n  {\n    index: 0,\n    type: IQuestionType.shortSentence,\n    title: \"title\",\n    field: \"title\",\n    answer: \"\",\n  },\n  {\n    index: 1,\n    type: IQuestionType.shortSentence,\n    title: \"summary\",\n    field: \"summary\",\n    answer: \"\",\n  },\n  {\n    index: 2,\n    type: IQuestionType.longSentence,\n    title: \"detail?\",\n    field: \"detail\",\n    answer: \"\",\n  },\n  {\n    index: 3,\n    type: IQuestionType.shortSentence,\n    title: \"tag[]\",\n    field: \"tag\",\n    answer: \"\",\n  },\n  {\n    index: 3,\n    type: IQuestionType.shortSentence,\n    title: \"urls[]\",\n    field: \"tag\",\n    answer: \"\",\n  },\n];\n\nexport default () => {\n  const [answers, setAnswer] = useState(questions);\n  const history = useHistory();\n  const handleAnswer = (index: number, text: string) => {\n    const newAnswer = questions.map((el, i) => {\n      if (i === index) {\n        el.answer = text;\n      }\n      return el;\n    });\n    setAnswer(newAnswer);\n  };\n  const handleRequest = async () => {\n    const body: INote = transformToRequstBody(answers);\n    const result = await postNote(body);\n    if (result.hasError) {\n      alert(result.data);\n    } else {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <Wrapper>\n      <Record type=\"note\" questions={questions} handleChange={handleAnswer} />\n      <button onClick={handleRequest}>제출</button>\n      <button\n        onClick={() => {\n          history.push(\"/\");\n        }}\n      >\n        뒤로가기\n      </button>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  position: absolute;\n  width: 50vw;\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"normalize.css\";\nimport { UserProvider } from \"context/authContext\";\nimport PrivateRoute from \"lib/privateRoute\";\nimport Index from \"./views\";\nimport Login from \"./views/login\";\nimport Day from \"./views/day\";\nimport Job from \"./views/job\";\nimport Note from \"./views/note\";\n\nexport default function App() {\n  return (\n    <UserProvider>\n      <Router>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Index} />\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute exact path=\"/day\" component={Day} />\n          <PrivateRoute exact path=\"/note\" component={Note} />\n          <PrivateRoute exact path=\"/job\" component={Job} />\n        </Switch>\n      </Router>\n    </UserProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}